basePath: /api/v1
definitions:
  main.BatchDeleteRequest:
    properties:
      file_keys:
        example:
        - cat/cat/123/photo/image1.jpg
        - cat/cat/123/photo/image2.jpg
        items:
          type: string
        type: array
      user_id:
        example: demo-user-123
        type: string
    type: object
  main.BatchDeleteResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/main.DeleteResult'
        type: array
      success:
        example: true
        type: boolean
      success_count:
        example: 2
        type: integer
      total_count:
        example: 3
        type: integer
    type: object
  main.BatchDownloadRequest:
    properties:
      file_keys:
        example:
        - cat/cat/123/photo/image1.jpg
        - cat/cat/123/photo/image2.jpg
        items:
          type: string
        type: array
      user_id:
        example: demo-user-123
        type: string
    type: object
  main.BatchDownloadResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/main.FileInfo'
        type: array
      success:
        example: true
        type: boolean
      success_count:
        example: 2
        type: integer
      total_count:
        example: 3
        type: integer
    type: object
  main.BatchPresignedURLRequest:
    properties:
      files:
        items:
          $ref: '#/definitions/main.PresignedURLRequest'
        type: array
      user_id:
        example: demo-user-123
        type: string
    type: object
  main.BatchPresignedURLResponse:
    properties:
      success:
        example: true
        type: boolean
      success_count:
        example: 3
        type: integer
      total_count:
        example: 3
        type: integer
      urls:
        items:
          $ref: '#/definitions/main.PresignedURLResponse'
        type: array
    type: object
  main.BatchUploadResponse:
    properties:
      results:
        items:
          $ref: '#/definitions/main.UploadResponse'
        type: array
      success:
        example: true
        type: boolean
      success_count:
        example: 2
        type: integer
      total_count:
        example: 3
        type: integer
    type: object
  main.DeleteResult:
    properties:
      error:
        example: File not found
        type: string
      file_key:
        example: cat/cat/123/photo/image1.jpg
        type: string
      success:
        example: true
        type: boolean
    type: object
  main.ErrorResponse:
    properties:
      code:
        example: 404
        type: integer
      error:
        example: File not found
        type: string
      message:
        example: The requested file could not be found
        type: string
    type: object
  main.FileInfo:
    properties:
      category:
        example: profile
        type: string
      content_type:
        example: image/jpeg
        type: string
      file_id:
        example: user_123_profile_abc123.jpg
        type: string
      file_name:
        example: profile.jpg
        type: string
      file_size:
        example: 1024000
        type: integer
      metadata:
        additionalProperties: true
        type: object
      uploaded_at:
        example: "2023-12-01T10:30:00Z"
        type: string
    type: object
  main.ListFilesResponse:
    properties:
      files:
        items:
          $ref: '#/definitions/main.FileInfo'
        type: array
      limit:
        example: 50
        type: integer
      offset:
        example: 0
        type: integer
      total:
        example: 25
        type: integer
    type: object
  main.PresignedURLRequest:
    properties:
      action:
        description: '"GET", "PUT", "DELETE"'
        example: PUT
        type: string
      content_type:
        example: image/jpeg
        type: string
      expires:
        allOf:
        - $ref: '#/definitions/time.Duration'
        description: 1 hour in nanoseconds
        example: 3600000000000
      file_key:
        example: cat/cat/123/photo/image.jpg
        type: string
      max_size:
        description: 5MB
        example: 5242880
        type: integer
      user_id:
        example: demo-user-123
        type: string
    type: object
  main.PresignedURLResponse:
    properties:
      expires_at:
        example: "2023-12-01T11:30:00Z"
        type: string
      file_key:
        example: cat/cat/123/photo/image.jpg
        type: string
      success:
        example: true
        type: boolean
      url:
        example: https://localhost:9000/bucket/file?X-Amz-Algorithm=...
        type: string
    type: object
  main.SuccessResponse:
    properties:
      data: {}
      message:
        example: Operation completed successfully
        type: string
      success:
        example: true
        type: boolean
    type: object
  main.ThumbnailInfo:
    properties:
      file_size:
        example: 25600
        type: integer
      height:
        example: 150
        type: integer
      size:
        example: 150x150
        type: string
      url:
        example: /api/v1/files/abc123/thumbnail?size=150x150
        type: string
      width:
        example: 150
        type: integer
    type: object
  main.UploadResponse:
    properties:
      category:
        example: profile
        type: string
      content_type:
        example: image/jpeg
        type: string
      entity_id:
        example: "123"
        type: string
      entity_type:
        example: user
        type: string
      file_id:
        example: user_123_profile_abc123.jpg
        type: string
      file_name:
        example: profile.jpg
        type: string
      file_size:
        example: 1024000
        type: integer
      metadata:
        additionalProperties: true
        type: object
      thumbnails:
        items:
          $ref: '#/definitions/main.ThumbnailInfo'
        type: array
      uploaded_at:
        example: "2023-12-01T10:30:00Z"
        type: string
    type: object
  time.Duration:
    enum:
    - 1
    - 1000
    - 1000000
    - 1000000000
    - 60000000000
    - 3600000000000
    - 1
    - 1000
    - 1000000
    - 1000000000
    format: int64
    type: integer
    x-enum-varnames:
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
    - Minute
    - Hour
    - Nanosecond
    - Microsecond
    - Millisecond
    - Second
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A simple and clean file storage API built with MinIO, supporting cat
    and dog photo uploads with automatic thumbnail generation, metadata callbacks,
    and direct/presigned downloads.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Cat & Dog Photo Storage API
  version: "1.0"
paths:
  /cats/{id}/batch/delete:
    post:
      consumes:
      - application/json
      description: Delete multiple cat files in a single request
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: string
      - description: Batch delete request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.BatchDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BatchDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Batch cat file delete
      tags:
      - cats
  /cats/{id}/batch/download:
    post:
      consumes:
      - application/json
      description: Download multiple cat files in a single request
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: string
      - description: Batch download request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.BatchDownloadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BatchDownloadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Batch cat file download
      tags:
      - cats
  /cats/{id}/batch/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload multiple cat files in a single request
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: string
      - description: Files to upload
        in: formData
        name: files
        required: true
        type: file
      - description: User ID
        in: formData
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BatchUploadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Batch cat file upload
      tags:
      - cats
  /cats/{id}/files:
    get:
      consumes:
      - application/json
      description: List all files belonging to a specific cat
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: string
      - description: 'Maximum number of files to return (default: 50)'
        in: query
        name: limit
        type: integer
      - description: 'Number of files to skip (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of cat files
          schema:
            allOf:
            - $ref: '#/definitions/main.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/main.ListFilesResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - access denied
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Service unavailable
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List Cat Files
      tags:
      - Cats
  /cats/{id}/files/{fileId}:
    delete:
      consumes:
      - application/json
      description: Delete a file belonging to a specific cat. Accepts either the metadata
        ID or the file key from upload response.
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: string
      - description: File identifier - can be either metadata ID (e.g., '9498ac3a-57b3-4a6e-9dad-9ec915ffa1b9')
          or file key (e.g., 'cat/cat/123/photo/1757314047_50a7135e-6612-48ff-b3a6-16f3f1595cbe.png')
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File deleted successfully
          schema:
            $ref: '#/definitions/main.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - access denied
          schema:
            additionalProperties: true
            type: object
        "404":
          description: File not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Service unavailable
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete Cat File
      tags:
      - Cats
    get:
      consumes:
      - application/json
      description: Download a file belonging to a specific cat. Accepts either the
        metadata ID or the file key from upload response.
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: string
      - description: File identifier - can be either metadata ID (e.g., '9498ac3a-57b3-4a6e-9dad-9ec915ffa1b9')
          or file key (e.g., 'cat/cat/123/photo/1757314047_50a7135e-6612-48ff-b3a6-16f3f1595cbe.png')
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: File content
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - access denied
          schema:
            additionalProperties: true
            type: object
        "404":
          description: File not found
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Service unavailable
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Download Cat File
      tags:
      - Cats
  /cats/{id}/presigned/download:
    post:
      consumes:
      - application/json
      description: Generate a presigned URL for direct cat file download from MinIO
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: string
      - description: Presigned URL request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.PresignedURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.PresignedURLResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Generate presigned download URL for cat
      tags:
      - cats
  /cats/{id}/presigned/upload:
    post:
      consumes:
      - application/json
      description: Generate a presigned URL for direct cat file upload to MinIO
      parameters:
      - description: Cat ID
        in: path
        name: id
        required: true
        type: string
      - description: Presigned URL request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.PresignedURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.PresignedURLResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Generate presigned upload URL for cat
      tags:
      - cats
  /dogs/{id}/batch/delete:
    post:
      consumes:
      - application/json
      description: Delete multiple dog files in a single request
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      - description: Batch delete request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.BatchDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BatchDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Batch dog file delete
      tags:
      - dogs
  /dogs/{id}/batch/download:
    post:
      consumes:
      - application/json
      description: Download multiple dog files in a single request
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      - description: Batch download request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.BatchDownloadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BatchDownloadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Batch dog file download
      tags:
      - dogs
  /dogs/{id}/batch/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload multiple dog files in a single request
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      - description: Files to upload
        in: formData
        name: files
        required: true
        type: file
      - description: User ID
        in: formData
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BatchUploadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Batch dog file upload
      tags:
      - dogs
  /dogs/{id}/files:
    get:
      consumes:
      - application/json
      description: List all files belonging to a specific dog
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      - description: 'Maximum number of files to return (default: 50)'
        in: query
        name: limit
        type: integer
      - description: 'Number of files to skip (default: 0)'
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of dog files
          schema:
            allOf:
            - $ref: '#/definitions/main.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/main.ListFilesResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - access denied
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Service unavailable
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: List Dog Files
      tags:
      - Dogs
  /dogs/{id}/files/{fileId}:
    delete:
      consumes:
      - application/json
      description: Delete a file belonging to a specific dog. Accepts either the metadata
        ID or the file key from upload response.
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      - description: File identifier - can be either metadata ID (e.g., '9498ac3a-57b3-4a6e-9dad-9ec915ffa1b9')
          or file key (e.g., 'dog/dog/456/photo/1757314047_50a7135e-6612-48ff-b3a6-16f3f1595cbe.png')
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: File deleted successfully
          schema:
            $ref: '#/definitions/main.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - access denied
          schema:
            additionalProperties: true
            type: object
        "404":
          description: File not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Service unavailable
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete Dog File
      tags:
      - Dogs
    get:
      consumes:
      - application/json
      description: Download a file belonging to a specific dog. Accepts either the
        metadata ID or the file key from upload response.
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      - description: File identifier - can be either metadata ID (e.g., '9498ac3a-57b3-4a6e-9dad-9ec915ffa1b9')
          or file key (e.g., 'dog/dog/456/photo/1757314047_50a7135e-6612-48ff-b3a6-16f3f1595cbe.png')
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: File content
          schema:
            type: file
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "403":
          description: Forbidden - access denied
          schema:
            additionalProperties: true
            type: object
        "404":
          description: File not found
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Service unavailable
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Download Dog File
      tags:
      - Dogs
  /dogs/{id}/presigned/download:
    post:
      consumes:
      - application/json
      description: Generate a presigned URL for direct dog file download from MinIO
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      - description: Presigned URL request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.PresignedURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.PresignedURLResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Generate presigned download URL for dog
      tags:
      - dogs
  /dogs/{id}/presigned/upload:
    post:
      consumes:
      - application/json
      description: Generate a presigned URL for direct dog file upload to MinIO
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      - description: Presigned URL request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.PresignedURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.PresignedURLResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Generate presigned upload URL for dog
      tags:
      - dogs
  /dogs/{id}/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload a photo for a specific dog with validation and thumbnail
        generation
      parameters:
      - description: Dog ID
        in: path
        name: id
        required: true
        type: string
      - description: Dog photo file (JPEG, PNG, WebP)
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: File uploaded successfully
          schema:
            allOf:
            - $ref: '#/definitions/main.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/main.UploadResponse'
              type: object
        "400":
          description: Bad request - validation error
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "413":
          description: File too large
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Service unavailable
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Upload Dog Photo
      tags:
      - Dogs
  /files/{fileId}/preview:
    get:
      consumes:
      - application/json
      description: Get a preview of a file with specified size (not implemented in
        demo)
      parameters:
      - description: File ID
        in: path
        name: fileId
        required: true
        type: string
      - description: 'Preview size (default: 300x300)'
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Not implemented in demo
          schema:
            additionalProperties: true
            type: object
      summary: Preview File
      tags:
      - Files
  /files/{fileId}/stream:
    get:
      consumes:
      - application/json
      description: Stream a file with range support for partial content (not implemented
        in demo)
      parameters:
      - description: File ID
        in: path
        name: fileId
        required: true
        type: string
      - description: Range header for partial content
        in: header
        name: Range
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: File content
          schema:
            type: file
        "206":
          description: Partial file content
          schema:
            type: file
      summary: Stream File
      tags:
      - Files
  /files/{fileId}/thumbnail:
    get:
      consumes:
      - application/json
      description: Get a thumbnail of a file with specified size (not implemented
        in demo)
      parameters:
      - description: File ID
        in: path
        name: fileId
        required: true
        type: string
      - description: 'Thumbnail size (default: 150x150)'
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Not implemented in demo
          schema:
            additionalProperties: true
            type: object
      summary: Get File Thumbnail
      tags:
      - Files
  /health:
    get:
      consumes:
      - application/json
      description: Check the health status of the storage API service
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            additionalProperties: true
            type: object
        "503":
          description: Service is unhealthy
          schema:
            additionalProperties: true
            type: object
      summary: Health Check
      tags:
      - System
  /presigned/batch-upload:
    post:
      consumes:
      - application/json
      description: Generate multiple presigned URLs for batch file upload
      parameters:
      - description: Batch presigned URL request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.BatchPresignedURLRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.BatchPresignedURLResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Generate batch presigned upload URLs
      tags:
      - presigned
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-User-ID
    type: apiKey
swagger: "2.0"
