// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cats/{id}/batch/delete": {
            "post": {
                "description": "Delete multiple cat files in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cats"
                ],
                "summary": "Batch cat file delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Batch delete request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.BatchDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BatchDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cats/{id}/batch/download": {
            "post": {
                "description": "Download multiple cat files in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cats"
                ],
                "summary": "Batch cat file download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Batch download request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.BatchDownloadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BatchDownloadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cats/{id}/batch/upload": {
            "post": {
                "description": "Upload multiple cat files in a single request",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cats"
                ],
                "summary": "Batch cat file upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Files to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BatchUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cats/{id}/files": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all files belonging to a specific cat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cats"
                ],
                "summary": "List Cat Files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of files to return (default: 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of files to skip (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of cat files",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/main.ListFilesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/cats/{id}/files/{fileId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Download a file belonging to a specific cat. Accepts either the metadata ID or the file key from upload response.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Cats"
                ],
                "summary": "Download Cat File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File identifier - can be either metadata ID (e.g., '9498ac3a-57b3-4a6e-9dad-9ec915ffa1b9') or file key (e.g., 'cat/cat/123/photo/1757314047_50a7135e-6612-48ff-b3a6-16f3f1595cbe.png')",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a file belonging to a specific cat. Accepts either the metadata ID or the file key from upload response.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cats"
                ],
                "summary": "Delete Cat File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File identifier - can be either metadata ID (e.g., '9498ac3a-57b3-4a6e-9dad-9ec915ffa1b9') or file key (e.g., 'cat/cat/123/photo/1757314047_50a7135e-6612-48ff-b3a6-16f3f1595cbe.png')",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/cats/{id}/presigned/download": {
            "post": {
                "description": "Generate a presigned URL for direct cat file download from MinIO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cats"
                ],
                "summary": "Generate presigned download URL for cat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Presigned URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.PresignedURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.PresignedURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cats/{id}/presigned/upload": {
            "post": {
                "description": "Generate a presigned URL for direct cat file upload to MinIO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cats"
                ],
                "summary": "Generate presigned upload URL for cat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Presigned URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.PresignedURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.PresignedURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dogs/{id}/batch/delete": {
            "post": {
                "description": "Delete multiple dog files in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dogs"
                ],
                "summary": "Batch dog file delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Batch delete request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.BatchDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BatchDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dogs/{id}/batch/download": {
            "post": {
                "description": "Download multiple dog files in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dogs"
                ],
                "summary": "Batch dog file download",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Batch download request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.BatchDownloadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BatchDownloadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dogs/{id}/batch/upload": {
            "post": {
                "description": "Upload multiple dog files in a single request",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dogs"
                ],
                "summary": "Batch dog file upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Files to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BatchUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dogs/{id}/files": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "List all files belonging to a specific dog",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dogs"
                ],
                "summary": "List Dog Files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of files to return (default: 50)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of files to skip (default: 0)",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of dog files",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/main.ListFilesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/dogs/{id}/files/{fileId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Download a file belonging to a specific dog. Accepts either the metadata ID or the file key from upload response.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Dogs"
                ],
                "summary": "Download Dog File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File identifier - can be either metadata ID (e.g., '9498ac3a-57b3-4a6e-9dad-9ec915ffa1b9') or file key (e.g., 'dog/dog/456/photo/1757314047_50a7135e-6612-48ff-b3a6-16f3f1595cbe.png')",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a file belonging to a specific dog. Accepts either the metadata ID or the file key from upload response.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dogs"
                ],
                "summary": "Delete Dog File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File identifier - can be either metadata ID (e.g., '9498ac3a-57b3-4a6e-9dad-9ec915ffa1b9') or file key (e.g., 'dog/dog/456/photo/1757314047_50a7135e-6612-48ff-b3a6-16f3f1595cbe.png')",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/main.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden - access denied",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/dogs/{id}/presigned/download": {
            "post": {
                "description": "Generate a presigned URL for direct dog file download from MinIO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dogs"
                ],
                "summary": "Generate presigned download URL for dog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Presigned URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.PresignedURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.PresignedURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dogs/{id}/presigned/upload": {
            "post": {
                "description": "Generate a presigned URL for direct dog file upload to MinIO",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dogs"
                ],
                "summary": "Generate presigned upload URL for dog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Presigned URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.PresignedURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.PresignedURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dogs/{id}/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload a photo for a specific dog with validation and thumbnail generation",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dogs"
                ],
                "summary": "Upload Dog Photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Dog photo file (JPEG, PNG, WebP)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File uploaded successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/main.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/main.UploadResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - validation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/files/{fileId}/preview": {
            "get": {
                "description": "Get a preview of a file with specified size (not implemented in demo)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Preview File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Preview size (default: 300x300)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Not implemented in demo",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/files/{fileId}/stream": {
            "get": {
                "description": "Stream a file with range support for partial content (not implemented in demo)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Stream File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Range header for partial content",
                        "name": "Range",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "206": {
                        "description": "Partial file content",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/files/{fileId}/thumbnail": {
            "get": {
                "description": "Get a thumbnail of a file with specified size (not implemented in demo)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Get File Thumbnail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Thumbnail size (default: 150x150)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Not implemented in demo",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the health status of the storage API service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "Service is healthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "503": {
                        "description": "Service is unhealthy",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/presigned/batch-upload": {
            "post": {
                "description": "Generate multiple presigned URLs for batch file upload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "presigned"
                ],
                "summary": "Generate batch presigned upload URLs",
                "parameters": [
                    {
                        "description": "Batch presigned URL request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.BatchPresignedURLRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.BatchPresignedURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.BatchDeleteRequest": {
            "type": "object",
            "properties": {
                "file_keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "cat/cat/123/photo/image1.jpg",
                        "cat/cat/123/photo/image2.jpg"
                    ]
                },
                "user_id": {
                    "type": "string",
                    "example": "demo-user-123"
                }
            }
        },
        "main.BatchDeleteResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.DeleteResult"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "success_count": {
                    "type": "integer",
                    "example": 2
                },
                "total_count": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "main.BatchDownloadRequest": {
            "type": "object",
            "properties": {
                "file_keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "cat/cat/123/photo/image1.jpg",
                        "cat/cat/123/photo/image2.jpg"
                    ]
                },
                "user_id": {
                    "type": "string",
                    "example": "demo-user-123"
                }
            }
        },
        "main.BatchDownloadResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.FileInfo"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "success_count": {
                    "type": "integer",
                    "example": 2
                },
                "total_count": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "main.BatchPresignedURLRequest": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.PresignedURLRequest"
                    }
                },
                "user_id": {
                    "type": "string",
                    "example": "demo-user-123"
                }
            }
        },
        "main.BatchPresignedURLResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "success_count": {
                    "type": "integer",
                    "example": 3
                },
                "total_count": {
                    "type": "integer",
                    "example": 3
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.PresignedURLResponse"
                    }
                }
            }
        },
        "main.BatchUploadResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.UploadResponse"
                    }
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "success_count": {
                    "type": "integer",
                    "example": 2
                },
                "total_count": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "main.DeleteResult": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "File not found"
                },
                "file_key": {
                    "type": "string",
                    "example": "cat/cat/123/photo/image1.jpg"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "error": {
                    "type": "string",
                    "example": "File not found"
                },
                "message": {
                    "type": "string",
                    "example": "The requested file could not be found"
                }
            }
        },
        "main.FileInfo": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "profile"
                },
                "content_type": {
                    "type": "string",
                    "example": "image/jpeg"
                },
                "file_id": {
                    "type": "string",
                    "example": "user_123_profile_abc123.jpg"
                },
                "file_name": {
                    "type": "string",
                    "example": "profile.jpg"
                },
                "file_size": {
                    "type": "integer",
                    "example": 1024000
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "uploaded_at": {
                    "type": "string",
                    "example": "2023-12-01T10:30:00Z"
                }
            }
        },
        "main.ListFilesResponse": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.FileInfo"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 50
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "total": {
                    "type": "integer",
                    "example": 25
                }
            }
        },
        "main.PresignedURLRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "\"GET\", \"PUT\", \"DELETE\"",
                    "type": "string",
                    "example": "PUT"
                },
                "content_type": {
                    "type": "string",
                    "example": "image/jpeg"
                },
                "expires": {
                    "description": "1 hour in nanoseconds",
                    "allOf": [
                        {
                            "$ref": "#/definitions/time.Duration"
                        }
                    ],
                    "example": 3600000000000
                },
                "file_key": {
                    "type": "string",
                    "example": "cat/cat/123/photo/image.jpg"
                },
                "max_size": {
                    "description": "5MB",
                    "type": "integer",
                    "example": 5242880
                },
                "user_id": {
                    "type": "string",
                    "example": "demo-user-123"
                }
            }
        },
        "main.PresignedURLResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string",
                    "example": "2023-12-01T11:30:00Z"
                },
                "file_key": {
                    "type": "string",
                    "example": "cat/cat/123/photo/image.jpg"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "url": {
                    "type": "string",
                    "example": "https://localhost:9000/bucket/file?X-Amz-Algorithm=..."
                }
            }
        },
        "main.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Operation completed successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "main.ThumbnailInfo": {
            "type": "object",
            "properties": {
                "file_size": {
                    "type": "integer",
                    "example": 25600
                },
                "height": {
                    "type": "integer",
                    "example": 150
                },
                "size": {
                    "type": "string",
                    "example": "150x150"
                },
                "url": {
                    "type": "string",
                    "example": "/api/v1/files/abc123/thumbnail?size=150x150"
                },
                "width": {
                    "type": "integer",
                    "example": 150
                }
            }
        },
        "main.UploadResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "example": "profile"
                },
                "content_type": {
                    "type": "string",
                    "example": "image/jpeg"
                },
                "entity_id": {
                    "type": "string",
                    "example": "123"
                },
                "entity_type": {
                    "type": "string",
                    "example": "user"
                },
                "file_id": {
                    "type": "string",
                    "example": "user_123_profile_abc123.jpg"
                },
                "file_name": {
                    "type": "string",
                    "example": "profile.jpg"
                },
                "file_size": {
                    "type": "integer",
                    "example": 1024000
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "thumbnails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.ThumbnailInfo"
                    }
                },
                "uploaded_at": {
                    "type": "string",
                    "example": "2023-12-01T10:30:00Z"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "format": "int64",
            "enum": [
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                1,
                1000,
                1000000,
                1000000000
            ],
            "x-enum-varnames": [
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-User-ID",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Cat & Dog Photo Storage API",
	Description:      "A simple and clean file storage API built with MinIO, supporting cat and dog photo uploads with automatic thumbnail generation, metadata callbacks, and direct/presigned downloads.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
